airlines <- read.csv("airlines.csv")
airports <- read.table("airports.txt"
, header = TRUE
, sep = "|"
)
flights <- read.csv("flights14.csv")
flights_Sept <- flights[which(flights$month == 9), ]
# ------------------------------------------------------------------------------------------------ #
# Program: Classtomm Script - Day 02.R
# Purpose: Data Manipulation in R
getwd()
setwd("C:\\Users\\ayush.yadav\\Desktop\\MSU\\R\\RAssignments\\Ayush\\Datasets")
# ------------------------------------------------------------------------------------------------ #
# Importing all datasets
flights <- read.csv("flights14.csv")
# ------------------------------------------------------------------------------------------------ #
# Data Summary
# Column and Row Names
names(flights)
colnames(flights)
rownames(flights)
# Dimensions (Number of records and Number of variables in Dataset)
# Details of variables (Type and Values)
flights[,4]
dim(flights) # Has 13 columns; how to see all column types at once?
str(flights) # Gives types of columns
head(flights, n = 10) #Gives top 10 records    #How will I get the last 10 records??
#collated[ , 2, drop = TRUE]
#mode(collated[ , 2, drop = TRUE])
unique(flights$month)
mode(flights)
class(flights)
# Statistical Summary
summary(flights)
table(flights$origin)
# ------------------------------------------------------------------------------------------------ #
# Ordering and Sorting
# Syntax: order( DF$Colname, . , decreasing= FALSE)
# order() does NOT sort the data, it only gives the order (positions)
# Gives a series of positions for all elements
x <- c(1,7,3,4)
y<- order(x)
y
Flights_airtime_order <- order(flights$air_time)
# To actually sort the data:
# Sorted in Ascending order by default
flights_sorted <- flights[order(flights$air_time), ]
flights_sorted2 <- flights[order(flights$air_time,decreasing = TRUE), ]
# To sort in descending order a minus (-) sign is used;
flights_sorted_desc <- flights[order(-flights$air_time),]
# Sorting on multiple columns: Columns can be seperated with a comma
flights_sorted_airtime_distance <- flights[order(flights$air_time,flights$distance), ]
# To sort on ascneding order of one & descending of the other:
# Add a minus sign on columns whihc need to be sorted in a descending order:
flights_sorted_airtime_distance2 <- flights[order(flights$air_time,-flights$distance), ]
# ------------------------------------------------------------------------------------------------ #
# Subsetting
# General Table Stucture: DF[Rows, Columns]
# Row Subsetting
# A) Using the 'which' function
flights_Sept <- flights[which(flights$month == 9), ]
# To get only the flight numbers & month of flights leaving in September:
flights_Sept_cols_subset <- flights[which(flights$month == 9), c("flight","month")]
# Subsetting based on Multiple Conditions
flights_Sept_JFK <- flights[which(flights$month == 9 & flights$origin== "JFK"), ]
# B) Using the subset function:
flights_Sept_suset <- subset(flights, month == 9)
flights_wo_year<-subset(x = flights,select = -year)
View(flights_wo_year)
# To subset for the flight number & corresponding month:
flights_Sept_subset <- subset(flights, month == 9, select = flight)
flights_Sept_subset
# Subset for all Flights going to BOS with Airtime less than 100
flights_to_Bos <- subset(flights, air_time < 100 & dest=="BOS")
# ------------------------------------------------------------------------------------------------ #
# Removing Duplicates
duplicated(flights$arr_time)
flights_dup <- flights[duplicated(flights$arr_time) == TRUE, ]
# ------------------------------------------------------------------------------------------------ #
# Merging Data
# Find out different models of planes used by United collated ('UA')
names <- read.csv("names.csv")
flights_UA <- subset(flights
, carrier=="UA" & !is.na(flights$tailnum)
, select = c(carrier, tailnum, flight)
)
flights_UA_models <- merge(x=flights_UA
, y=names[c("tailnum", "boeing_num")]
, by.x = "tailnum"
, by.y = "tailnum"
, all.x = TRUE)
UA_models_summary <- as.data.frame(table(flights_UA_models$boeing_num, dnn = list("Boein_num")))
UA_models_summary <- UA_models_summary[UA_models_summary$Freq!=0, ]
# ------------------------------------------------------------------------------------------------ #
# Delete objects from memory
ls()
rm(x)
rm(list = ls())
# ------------------------------------------------------------------------------------------------ #
# --------------------------------------User Defined Function ------------------------------------ #
#Defining a function
# name.of.function <- function(argument1, argument2)
#   {
#     statements
#     return(something)
#   }
# Writing and calling a function
square.it <- function(x)
{
square <- x * x
return(square)
}
answer <- square.it(2)     #Calling the function square.it and passing the value 2
matrix1 <- cbind(c(3, 10), c(4, 5))
square.it(matrix1)
setwd("C:\Users\Mohit.Dhamecha\Documents\R\My R Assignment")
()
getwd()
setwd("C:\Users\Mohit.Dhamecha\Documents\R\My R Assignment")
getwd()
setwd("C:\\Users\\Mohit.Dhamecha\\Documents\\R\\My R Assignment")
flights <- read.csv("flights.csv")
names(flights)
colnames(flights)
rownames(flights)
flights[,4]
dim(flights) # Has 13 columns; how to see all column types at once?
str(flights) # Gives types of columns
head(flights, n = 10) #Gives top 10 records    #How will I get the last 10 records??
