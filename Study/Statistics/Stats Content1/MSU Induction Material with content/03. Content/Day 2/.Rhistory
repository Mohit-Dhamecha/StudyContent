totalCustomers <- 100
pHigh <- 20/100
pLow <- 80/100
#Conditional probabilities
pClicked_High <- 0.4
pClicked_Low <- 0.2
bayesBox <- data.frame(type = c("High", "Low"), populationProportion = c(0.2, 0.8),
Clicked = c(0.4, 0.8), DidntClick = c(0.6,0.2))
pHigh_Clicked <- pClicked_High*pHigh/
(pClicked_High*pHigh + pClicked_Low*pLow)
pClicked_High*pHigh + pClicked_Low*pLow
pClicked_High*pHigh
### Binomial distribution
library(ggplot2)
# Customer churn
# Amazon has 100,000 customers
# Assume that the probability of a customer churning is p
# p <- 0.1
n <- 100
p <- 0.1
# What is the probability of different churn rates?
# Number of customers who churn at different rates are:
# 10% - 1
# 20%  - 2...
numCustomers <- 1:10
p <- dbinom(numCustomers, prob=0.2, size=10)
qplot(x=seq(0.1,1, by =0.1), y =p,geom="line")
library(ggplot2)
# Customer churn
# Amazon has 100customers
# Assume that the probability of a customer churning is p
# p <- 0.1
n <- 100
p <- 0.1
# What is the probability of different churn rates?
# Number of customers who churn at different rates are:
# 10% - 1
# 20%  - 2...
numCustomers <- 1:10
p <- dbinom(numCustomers, prob=0.2, size=10)
qplot(x=seq(0.1,1, by =0.1), y =p,geom="line")
source('D:/Training/MSU 2.0/Day2-Probability and Probability distributions/CLT_Simulation.R', echo=TRUE)
barplot(height=p)
source('C:/Users/NAREN~1.SRI/AppData/Local/Temp/binomialExample.R', echo=TRUE)
# Construct a population
pop <- rnorm(n = 10000, 20, 9)
hist(pop, col = 'brown', breaks = 20)
# Comp
mean(pop)
sd(pop)
sampMeans <- NULL
for (i in 1:1000) {
sam <- sample(x = pop, size = 30, replace = FALSE)
samAvg <- mean(sam)
sampMeans[i] <- samAvg
}
hist(sampMeans, col = 'grey')
mean(sampMeans)
sd(sampMeans)
plot(density(sampMeans), main = "Distribution of Means")
polygon(density(sampMeans), col = "brown")
?rgamma
?rbinmom
?rbinom
pop <- rbinom(n = 100, 100000, 0.3)
hist(pop, col = 'brown', breaks = 20)
pop
?rbinom
pop <- rbinom(n = 10000, 10, 0.3)
hist(pop, col = 'brown', breaks = 20)
# Comp
mean(pop)
sd(pop)
sampMeans <- NULL
for (i in 1:1000) {
sam <- sample(x = pop, size = 30, replace = FALSE)
samAvg <- mean(sam)
sampMeans[i] <- samAvg
}
hist(sampMeans, col = 'grey')
mean(sampMeans)
sd(sampMeans)
plot(density(sampMeans), main = "Distribution of Means")
polygon(density(sampMeans), col = "brown")
?rgamma
pop <- rbinom(n = 10000, shape = 10, scale = 1)
pop <- rgamma(n = 10000, shape = 10, scale = 1)
pop
pop <- rgamma(n = 10000, shape = 10, scale = 1)
hist(pop, col = 'brown', breaks = 20)
mean(pop)
sd(pop)
sampMeans <- NULL
for (i in 1:1000) {
sam <- sample(x = pop, size = 30, replace = FALSE)
samAvg <- mean(sam)
sampMeans[i] <- samAvg
}
hist(sampMeans, col = 'grey')
mean(sampMeans)
sd(sampMeans)
plot(density(sampMeans), main = "Distribution of Means")
polygon(density(sampMeans), col = "brown")
mean(pop)
hist(pop, col = 'brown', breaks = 20)
pop <- rgamma(n = 10000, shape = 10, scale = 8)
hist(pop, col = 'brown', breaks = 20)
mean(pop)
sd(pop)
sampMeans <- NULL
for (i in 1:1000) {
sam <- sample(x = pop, size = 30, replace = FALSE)
samAvg <- mean(sam)
sampMeans[i] <- samAvg
}
hist(sampMeans, col = 'grey')
mean(sampMeans)
sd(sampMeans)
plot(density(sampMeans), main = "Distribution of Means")
polygon(density(sampMeans), col = "brown")
source('C:/Users/naren.srinivasan/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.Outlook/Z6UEKYRH/CLT_Simulation.R', echo=TRUE)
### Bayes theorem demo
### Business case ####
# A large online retailer [say Amazon] just rolled out a digital ad campaign on
# their website. For the people who click on the ad, Amazon wants to customize the post-click
# engagement
# Amazon as High and Low Value customers [Proportions are 80% and 20%]
# Amazon has to choose between investment in 2 engagements strategies [They can pick only one]
# Customized [Call] - This is for High value customers
# Generic [Email] - This is for low value customers
# Amazon has to decide which strategy to invest in based on whether a customer who clicked
# is more likely to be a High value vs. Low value customer
# Based on a sample they have tried to estimate
# proportions for different types of customers [Total 100 customers]
# Data
# Click rate for high value customers - 40 %
# Click rate for low value customers - 20%
# I want to understand P(High | Clicked) vs. P(Low |Clicked)
totalCustomers <- 100
pHigh <- 20/100
pLow <- 80/100
#Conditional probabilities
pClicked_High <- 0.4
pClicked_Low <- 0.2
bayesBox <- data.frame(type = c("High", "Low"), populationProportion = c(0.2, 0.8),
Clicked = c(0.4, 0.8), DidntClick = c(0.6,0.2))
# ------------------------------------------------------------------
#Now let's evaluate the probabilities of High | Clicked and Low | Clicked
#
pHigh_Clicked <- pClicked_High*pHigh/
(pClicked_High*pHigh + pClicked_Low*pLow)
pLow_Clicked <- pClicked_Low*pLow/
(pClicked_High*pHigh + pClicked_Low*pLow)
print(paste("High Value | Clicked: ", pHigh_Clicked, sep = " "))
print(paste("Low Value | Clicked: ", pLow_Clicked, sep = " "))
### Given that a customer clicks, he/she is more likely to be a low value customer
### Therefore Amazon would want to invest in Generic targeting infrastructure
